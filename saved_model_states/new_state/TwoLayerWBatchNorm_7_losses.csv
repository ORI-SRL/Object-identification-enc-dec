training,"[0.07259054554972016, -0.0049395548762288565, -0.008871028086329712, -0.011495549422011118, -0.013048143509044268, -0.0139761433043879, -0.014870770060480914, -0.015215985812072721, -0.01562631556276824, -0.016137469241592053, -0.016457360625162582, -0.016651119900685803, -0.01666339799153739, -0.016985367546827893, -0.017186788905496513, -0.017103632376746874, -0.017514501230788723, -0.017634809086812992, -0.01761433830576761, -0.017689319134743333, -0.0176602090952622, -0.0177646725449726, -0.018037478741661252, -0.017906945045211804, -0.018121432246906415, -0.018180079876292294, -0.018158013474827855, -0.018147237288040696, -0.018309628631974332, -0.018216305034973714, -0.018248614750663254, -0.01830642431531753, -0.01842390504654482, -0.018390304893901813, -0.018316339090272526, -0.018339302931702106, -0.01863707288930588, -0.01849806602069429, -0.018570564104709152, -0.01847729567831285, -0.018700139933403765, -0.018713903169487123, -0.018502679417215697, -0.018768290552660046, -0.01867993586063783, -0.018753319851885015, -0.0186680984261815, -0.018656377731579965, -0.01877959564860378, -0.018827429869385046, -0.018751722416070815, -0.018851824615832086, -0.018779989386049505, -0.018780489730087915, -0.01893255507973867, -0.01889983053569084, -0.018697504228346536, -0.019050890005359027, -0.01881811979073827, -0.01891010763553855, -0.01906854980743337, -0.018989045435291663, -0.018907729150212615, -0.01888492800953123, -0.018940477712808528, -0.018945717174455385, -0.018960997259284112, -0.019038906971238882, -0.01908531658928369, -0.01893878144365008, -0.018881866157562217, -0.019042365336280877, -0.01902546882704, -0.019024415172944877, -0.019108133368164262, -0.0190900865163858, -0.01893152423496439, -0.018928353544150556, -0.01900607193677185, -0.018813884843175657, -0.019102777333281067, -0.019185617951569315, -0.019047289046624276, -0.01920224077507197, -0.019112781378426882, -0.019213910851234667, -0.01907582581602783, -0.019184600907528354, -0.019198240163936234, -0.01913881623179954, -0.019259134255280006]"
testing,"[-0.003116304912786607, -0.004519918275511135, -0.0032421664876417945, -0.011177518916235345, -0.009029615326258152, -0.012853279178354727, -0.012295383400708923, -0.011551424921692713, -0.00833017172028675, -0.011675614726972644, -0.009618437393446979, -0.01336935976692273, -0.012529829112084015, -0.010126189440083892, -0.011422544431811928, -0.013073180786981855, -0.014030078415880385, -0.013981028596627648, -0.014350944259406431, -0.013604870521584931, -0.014076438413568489, -0.01317744371076317, -0.01306662540477903, -0.014338896174550704, -0.013928333292310328, -0.012200535654657237, -0.014563330191025592, -0.013763747982802275, -0.0134194077792294, -0.01365208777639529, -0.012080748565495014, -0.013872423219373044, -0.011927857139633725, -0.014086881809382012, -0.01539862947538495, -0.014019738255149645, -0.01506736240369956, -0.01432097903655275, -0.014441972866694889, -0.013579707815433327, -0.015730461409396452, -0.012171055089034464, -0.013401490714623715, -0.015192683857015294, -0.013480033647046303, -0.014801056073654605, -0.01467067145479276, -0.013880004989914596, -0.014332184041647808, -0.015370746806223431, -0.014593613688307612, -0.01522869862737539, -0.014416388888924343, -0.014971847205584787, -0.014427751446972885, -0.015431780175751319, -0.015067366356758968, -0.01284366968067606, -0.013525571922123756, -0.014623150082669505, -0.015235694317633042, -0.01218198500978558, -0.01450291840845476, -0.01298493591805353, -0.014411172237368706, -0.014406778930645922, -0.015154638084704462, -0.014982986294300012, -0.01511380102728372, -0.01323026557625069, -0.013280757743379345, -0.014684615889564157, -0.01457684515449016, -0.012896356886536207, -0.014732131428267483, -0.01373695583416797, -0.012275922084328435, -0.01286314551860256, -0.014490256465607039, -0.013527440236193006, -0.014358805021797509, -0.014473726335184081, -0.014310638225414668, -0.014571364695692191, -0.013510643324875475, -0.01385030607217113, -0.01364276337477824, -0.014507039186909147, -0.013472931930268913, -0.013169145297623523, -0.013255392965536726]"
training_silhouette,"[tensor(-0.0407, device='cuda:0'), tensor(-0.3740, device='cuda:0'), tensor(-0.5332, device='cuda:0'), tensor(-0.6432, device='cuda:0'), tensor(-0.7131, device='cuda:0'), tensor(-0.7482, device='cuda:0'), tensor(-0.7808, device='cuda:0'), tensor(-0.7922, device='cuda:0'), tensor(-0.8034, device='cuda:0'), tensor(-0.8215, device='cuda:0'), tensor(-0.8311, device='cuda:0'), tensor(-0.8333, device='cuda:0'), tensor(-0.8315, device='cuda:0'), tensor(-0.8419, device='cuda:0'), tensor(-0.8487, device='cuda:0'), tensor(-0.8448, device='cuda:0'), tensor(-0.8595, device='cuda:0'), tensor(-0.8631, device='cuda:0'), tensor(-0.8619, device='cuda:0'), tensor(-0.8646, device='cuda:0'), tensor(-0.8632, device='cuda:0'), tensor(-0.8674, device='cuda:0'), tensor(-0.8781, device='cuda:0'), tensor(-0.8729, device='cuda:0'), tensor(-0.8813, device='cuda:0'), tensor(-0.8835, device='cuda:0'), tensor(-0.8826, device='cuda:0'), tensor(-0.8820, device='cuda:0'), tensor(-0.8887, device='cuda:0'), tensor(-0.8850, device='cuda:0'), tensor(-0.8870, device='cuda:0'), tensor(-0.8887, device='cuda:0'), tensor(-0.8930, device='cuda:0'), tensor(-0.8916, device='cuda:0'), tensor(-0.8887, device='cuda:0'), tensor(-0.8896, device='cuda:0'), tensor(-0.9013, device='cuda:0'), tensor(-0.8959, device='cuda:0'), tensor(-0.8988, device='cuda:0'), tensor(-0.8949, device='cuda:0'), tensor(-0.9039, device='cuda:0'), tensor(-0.9043, device='cuda:0'), tensor(-0.8961, device='cuda:0'), tensor(-0.9066, device='cuda:0'), tensor(-0.9033, device='cuda:0'), tensor(-0.9060, device='cuda:0'), tensor(-0.9026, device='cuda:0'), tensor(-0.9022, device='cuda:0'), tensor(-0.9069, device='cuda:0'), tensor(-0.9090, device='cuda:0'), tensor(-0.9058, device='cuda:0'), tensor(-0.9101, device='cuda:0'), tensor(-0.9070, device='cuda:0'), tensor(-0.9072, device='cuda:0'), tensor(-0.9130, device='cuda:0'), tensor(-0.9119, device='cuda:0'), tensor(-0.9040, device='cuda:0'), tensor(-0.9179, device='cuda:0'), tensor(-0.9084, device='cuda:0'), tensor(-0.9123, device='cuda:0'), tensor(-0.9189, device='cuda:0'), tensor(-0.9155, device='cuda:0'), tensor(-0.9122, device='cuda:0'), tensor(-0.9113, device='cuda:0'), tensor(-0.9135, device='cuda:0'), tensor(-0.9139, device='cuda:0'), tensor(-0.9142, device='cuda:0'), tensor(-0.9175, device='cuda:0'), tensor(-0.9194, device='cuda:0'), tensor(-0.9136, device='cuda:0'), tensor(-0.9111, device='cuda:0'), tensor(-0.9175, device='cuda:0'), tensor(-0.9170, device='cuda:0'), tensor(-0.9168, device='cuda:0'), tensor(-0.9202, device='cuda:0'), tensor(-0.9195, device='cuda:0'), tensor(-0.9131, device='cuda:0'), tensor(-0.9130, device='cuda:0'), tensor(-0.9161, device='cuda:0'), tensor(-0.9084, device='cuda:0'), tensor(-0.9199, device='cuda:0'), tensor(-0.9233, device='cuda:0'), tensor(-0.9177, device='cuda:0'), tensor(-0.9238, device='cuda:0'), tensor(-0.9205, device='cuda:0'), tensor(-0.9245, device='cuda:0'), tensor(-0.9188, device='cuda:0'), tensor(-0.9231, device='cuda:0'), tensor(-0.9238, device='cuda:0'), tensor(-0.9227, device='cuda:0'), tensor(-0.9265, device='cuda:0')]"
testing_silhouette,"[tensor(-0.2400, device='cuda:0'), tensor(-0.4437, device='cuda:0'), tensor(-0.3515, device='cuda:0'), tensor(-0.5777, device='cuda:0'), tensor(-0.5780, device='cuda:0'), tensor(-0.6365, device='cuda:0'), tensor(-0.6185, device='cuda:0'), tensor(-0.5813, device='cuda:0'), tensor(-0.4698, device='cuda:0'), tensor(-0.5778, device='cuda:0'), tensor(-0.6510, device='cuda:0'), tensor(-0.6329, device='cuda:0'), tensor(-0.6010, device='cuda:0'), tensor(-0.5085, device='cuda:0'), tensor(-0.5517, device='cuda:0'), tensor(-0.6487, device='cuda:0'), tensor(-0.6533, device='cuda:0'), tensor(-0.6529, device='cuda:0'), tensor(-0.6655, device='cuda:0'), tensor(-0.6355, device='cuda:0'), tensor(-0.6548, device='cuda:0'), tensor(-0.6177, device='cuda:0'), tensor(-0.6136, device='cuda:0'), tensor(-0.6650, device='cuda:0'), tensor(-0.6488, device='cuda:0'), tensor(-0.5779, device='cuda:0'), tensor(-0.6744, device='cuda:0'), tensor(-0.6412, device='cuda:0'), tensor(-0.6290, device='cuda:0'), tensor(-0.6366, device='cuda:0'), tensor(-0.5748, device='cuda:0'), tensor(-0.6484, device='cuda:0'), tensor(-0.5677, device='cuda:0'), tensor(-0.6536, device='cuda:0'), tensor(-0.7064, device='cuda:0'), tensor(-0.6515, device='cuda:0'), tensor(-0.6939, device='cuda:0'), tensor(-0.6636, device='cuda:0'), tensor(-0.6683, device='cuda:0'), tensor(-0.6336, device='cuda:0'), tensor(-0.7205, device='cuda:0'), tensor(-0.5789, device='cuda:0'), tensor(-0.6272, device='cuda:0'), tensor(-0.7002, device='cuda:0'), tensor(-0.6298, device='cuda:0'), tensor(-0.6826, device='cuda:0'), tensor(-0.6779, device='cuda:0'), tensor(-0.6470, device='cuda:0'), tensor(-0.6635, device='cuda:0'), tensor(-0.7057, device='cuda:0'), tensor(-0.6748, device='cuda:0'), tensor(-0.6998, device='cuda:0'), tensor(-0.6678, device='cuda:0'), tensor(-0.6895, device='cuda:0'), tensor(-0.6686, device='cuda:0'), tensor(-0.7078, device='cuda:0'), tensor(-0.6937, device='cuda:0'), tensor(-0.6063, device='cuda:0'), tensor(-0.6320, device='cuda:0'), tensor(-0.6755, device='cuda:0'), tensor(-0.7022, device='cuda:0'), tensor(-0.5789, device='cuda:0'), tensor(-0.6718, device='cuda:0'), tensor(-0.6092, device='cuda:0'), tensor(-0.6664, device='cuda:0'), tensor(-0.6690, device='cuda:0'), tensor(-0.6970, device='cuda:0'), tensor(-0.6896, device='cuda:0'), tensor(-0.6969, device='cuda:0'), tensor(-0.6186, device='cuda:0'), tensor(-0.6217, device='cuda:0'), tensor(-0.6781, device='cuda:0'), tensor(-0.6735, device='cuda:0'), tensor(-0.6071, device='cuda:0'), tensor(-0.6808, device='cuda:0'), tensor(-0.6398, device='cuda:0'), tensor(-0.5814, device='cuda:0'), tensor(-0.6056, device='cuda:0'), tensor(-0.6709, device='cuda:0'), tensor(-0.6316, device='cuda:0'), tensor(-0.6682, device='cuda:0'), tensor(-0.6703, device='cuda:0'), tensor(-0.6634, device='cuda:0'), tensor(-0.6733, device='cuda:0'), tensor(-0.6318, device='cuda:0'), tensor(-0.6456, device='cuda:0'), tensor(-0.6365, device='cuda:0'), tensor(-0.6707, device='cuda:0'), tensor(-0.6301, device='cuda:0'), tensor(-0.6232, device='cuda:0'), tensor(-0.6198, device='cuda:0')]"
